from abc import ABC, abstractmethod

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏≤‡∏™ Product
class Product(ABC):
    def __init__(self, name, price):  # ‡πÅ‡∏Å‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ò‡∏≠‡∏î __init__
        self.name = name
        self.price = price

    @abstractmethod
    def get_details(self):
        pass  # ‡πÄ‡∏õ‡πá‡∏ô abstract method

    def get_price(self):
        return self.price
    
# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏≤‡∏™ Book ‡∏ó‡∏µ‡πà‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î‡∏°‡∏≤‡∏à‡∏≤‡∏Å Product
class Book(Product):
    def __init__(self, name, price, author):
        super().__init__(name, price)
        self.author = author

    def get_details(self):
        return f"Book: {self.name}, Author: {self.author}, Price: {self.price} ‡∏ö‡∏≤‡∏ó"
    
# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏≤‡∏™ Electronics ‡∏ó‡∏µ‡πà‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î‡∏°‡∏≤‡∏à‡∏≤‡∏Å Product
class Electronics(Product):
    def __init__(self, name, price, brand):  # ‡∏•‡∏ö‡∏≠‡∏≤‡∏£‡πå‡∏Å‡∏¥‡∏ß‡πÄ‡∏°‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏°‡∏≤
        super().__init__(name, price)
        self.brand = brand

    def get_details(self):
        return f"Electronics: {self.name}, Brand: {self.brand}, Price: {self.price} ‡∏ö‡∏≤‡∏ó"

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏≤‡∏™ Clothing ‡∏ó‡∏µ‡πà‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î‡∏°‡∏≤‡∏à‡∏≤‡∏Å Product 
class Clothing(Product):
    def __init__(self, name, price, size, material):
        super().__init__(name, price)
        self.size = size
        self.material = material

    def get_details(self):
        return f"üëï {self.name} - Size: {self.size}, Material: {self.material}, Price: ${self.price}"
    
# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏≤‡∏™ Cart
class Cart:
    def __init__(self):
        self.items = []

    def add_product(self, product):
        self.items.append(product)
        print(f"‚úÖ Added to cart: {product.get_details()}")

    def total_price(self):
        return sum(item.get_price() for item in self.items)

    def show_cart(self):
        print("\nüõí Cart Items:")
        for item in self.items:
            print(f"- {item.get_details()}")
        print(f"üí∞ Total Price: ${self.total_price()}")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏≤‡∏™ User
class User:
    def __init__(self, name):
        self.name = name
        self.cart = Cart()

    def add_to_cart(self, product):
        self.cart.add_product(product)

    def checkout(self):
        self.cart.show_cart()
        print(f"üõçÔ∏è {self.name} has completed the purchase!")

# üî• ‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
if __name__ == "__main__":
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    laptop = Electronics("Laptop", 1200, "Apple")  # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏≤‡∏£‡πå‡∏Å‡∏¥‡∏ß‡πÄ‡∏°‡∏ô‡∏ï‡πå
    t_shirt = Clothing("T-Shirt", 25, "L", "Cotton")
    book = Book("Python Programming", 50, "John Doe")

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    user1 = User("Alice")

    # ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
    user1.add_to_cart(laptop)
    user1.add_to_cart(t_shirt)

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡∏∞ Checkout
    user1.checkout()
